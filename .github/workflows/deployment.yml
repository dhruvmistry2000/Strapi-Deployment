name: Strapi Deployment using ECS

on:
  workflow_dispatch:
  
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7 

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init
        run: |
          cd Terraform3
          terraform init

      - name: Terraform plan
        run: |
          cd Terraform3
          terraform plan
          
      - name: Terraform Apply
        run: |
          cd Terraform3
          terraform apply -auto-approve

    #   - name: Get ECS Task Definition ARN
    #     id: get_task_def
    #     run: |
    #         task_def_arn=$(aws ecs describe-task-definition --task-definition strapi-app --query 'taskDefinition.taskDefinitionArn' --output text)
    #         echo "taskDefinitionArn=$task_def_arn" >> $GITHUB_ENV

      - name: Trigger CodeDeploy Deployment
        run: |
            aws deploy create-deployment \
              --application-name strapi-codedeploy-app \
              --deployment-group-name strapi-deploy-group \
              --deployment-config-name CodeDeployDefault.ECSCanary10Percent5Minutes \
              --revision revisionType=AppSpecContent,appSpecContent="{\"version\":\"1.0\",\"Resources\":[{\"TargetService\":{\"Type\":\"AWS::ECS::Service\",\"Properties\":{\"TaskDefinition\":\"${{ secrets.TASK_ARN }}\",\"LoadBalancerInfo\":{\"ContainerName\":\"strapi\",\"ContainerPort\":1337}}}}]}"   