name: Deploy to AWS CodeDeploy (Docker)

on:
  push:
    branches:
      - main # Or your main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }} 

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 985539759598.dkr.ecr.us-east-1.amazonaws.com # Replace with your AWS region and account ID

      - name: Build and tag Docker image
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY }} . # Replace with your Docker image name
          

      - name: Push Docker image to ECR
        run: docker push ${{ secrets.ECR_REPOSITORY }}
        
      - name: Get task definition ARN
        id: get_task_definition
        run: |
          TASK_DEFINITION_ARN=$(aws ecs describe-task-definition --task-definition strapi-task --region us-east-1 --query "taskDefinition.taskDefinitionArn" --output text) # Replace with your task definition family
          echo "::set-output name=task_definition_arn::$TASK_DEFINITION_ARN"

      - name: Create deployment
        run: |
          aws deploy create-deployment \
            --application-name StrapiCodeDeployApp \
            --deployment-group-name StrapiDeploymentGroup \
            --deployment-config-name CodeDeployDefault.ECSAllAtOnce \
            --task-definition ${{ steps.get_task_definition.outputs.task_definition_arn }}
