name: Deploy Strapi App to ECS (Blue/Green)

on:
  workflow_dispatch:

jobs:
  build-and-push-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        env:
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        run: |
          docker build -t $ECR_REPOSITORY .
          docker push $ECR_REPOSITORY

  deploy-to-ecs:
    name: Deploy to ECS with Blue/Green
    runs-on: ubuntu-latest
    needs: build-and-push-image

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Initialize Terraform
        run: |
            cd Terraform2
            terraform init
  
      - name: Generate Terraform Plan
        run: |
            cd Terraform2
            terraform plan \
              -var "image_uri=${{ secrets.ECR_REPOSITORY }}" \
              -var "region=${{ secrets.AWS_REGION }}"
  
      - name: Apply Terraform Configuration
        run: |
            cd Terraform2
            terraform apply \
              -var "image_uri=${{ secrets.ECR_REPOSITORY }}" \
              -var "region=${{ secrets.AWS_REGION }}" \
              --auto-approve
