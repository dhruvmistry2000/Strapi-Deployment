name: Strapi Deployment using ECS in CODEDEPLOY

on:
  workflow_dispatch:  # Triggered manually via the GitHub UI
  
jobs:
  CodeDeploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7 

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}


      - name: Initialize Terraform
        run: |
            cd Terraform2
            terraform init
  
      - name: Generate Terraform Plan
        run: |
            cd Terraform2
            terraform plan \
              -var "image_uri=${{ secrets.ECR_REPOSITORY }}" \
              -var "region=${{ secrets.AWS_REGION }}"
  
      - name: Apply Terraform Configuration
        run: |
            cd Terraform2
            terraform apply \
              -var "image_uri=${{ secrets.ECR_REPOSITORY }}" \
              -var "region=${{ secrets.AWS_REGION }}" \
              --auto-approve

      - name: Get ECS Task Definition ARN
        id: get_task_def
        run: |
          TASK_ARN=$(aws ecs list-task-definitions --family-prefix strapi-task --sort DESC --max-items 1 --query 'taskDefinitionArns[0]' --output text)
          echo "taskDefinitionArn=$TASK_ARN" >> $GITHUB_OUTPUT

      - name: Trigger CodeDeploy Deployment
        run: |
          aws deploy create-deployment \
            --application-name strapi-codedeploy-app \
            --deployment-group-name strapi-deploy-group \
            --deployment-config-name CodeDeployDefault.ECSCanary10Percent5Minutes \
            --revision revisionType=AppSpecContent,appSpecContent="{\"version\":\"1.0\",\"Resources\":[{\"TargetService\":{\"Type\":\"AWS::ECS::Service\",\"Properties\":{\"TaskDefinition\":\"${{ steps.get_task_def.outputs.taskDefinitionArn }}\",\"LoadBalancerInfo\":{\"ContainerName\":\"strapi\",\"ContainerPort\":1337}}}}]}"          